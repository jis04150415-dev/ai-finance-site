import 'server-only'

/** Frankfurter 응답 타입 (무·키 무료 환율 API) */
type FrankfurterResp = {
  amount: number
  base: string
  date: string
  rates: Record<string, number>
}

/** 환율: USD→KRW/JPY/EUR (키 불필요) */
export async function getFx() {
  const url = 'https://api.frankfurter.app/latest?from=USD&to=KRW,JPY,EUR'
  const r = await fetch(url, { next: { revalidate: 600 } }) // 10분 캐시
  if (!r.ok) throw new Error(`FX fetch failed: ${r.status}`)
  const data = (await r.json()) as FrankfurterResp
  return {
    date: data.date,
    usdkrw: data.rates?.KRW ?? 0,
    usdjpy: data.rates?.JPY ?? 0,
    usdeur: data.rates?.EUR ?? 0,
  }
}

/** 금 시세: 임시로 number 반환 (Zod 스키마 만족) */
export async function getGold() {
  return {
    usdPerOunce: 0,
    krwPerOunce: 0,
    date: new Date().toISOString().slice(0,10),
  }
}

/** 지수: 배열 반환 → page.tsx의 indices.map()이 안전하게 동작 */
type IndexItem = {
  symbol: string
  shortName?: string
  regularMarketPrice?: number | null
}

export async function getIndexes(): Promise<IndexItem[]> {
  // 지금은 빈 배열 (나중에 실제 API 연결 가능)
  return []
}

/** ✅ page.tsx에서 쓰는 이름 대응 */
export async function getIndices() {
  return getIndexes()
}
